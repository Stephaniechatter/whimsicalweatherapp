{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniewhite/Desktop/weather-react/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sunny from \"../src/assets/clearskies.jpg\";\nimport cloudy from \"../src/assets/clouds.jpg\";\nimport drizzle from \"../src/assets/rain.jpg\";\nimport snow from \"../src/assets/snow.png\";\nimport mist from \"../src/assets/fog.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherIcons = {\n  Clear: sunny,\n  Clouds: cloudy,\n  Drizzle: drizzle,\n  Snow: snow,\n  Mist: mist\n};\nconst iconStyle = {\n  width: \"100px\",\n  height: \"100px\",\n  objectFit: \"cover\"\n};\nexport default function Weather({\n  city\n}) {\n  _s();\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(response => {\n      setTemperature(response.data.main.temp);\n      setDescription(response.data.weather[0].main);\n      setHumidity(response.data.main.humidity);\n      setWindSpeed(response.data.wind.speed);\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error);\n    });\n  }, [city]);\n  const getWeatherIcon = weatherDescription => {\n    const iconUrl = weatherIcons[weatherDescription];\n    if (iconUrl) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconUrl,\n        alt: weatherDescription,\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u2753\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"weather-app-city\",\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"weather-app-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"weather-app-icon\",\n        children: getWeatherIcon(description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \"Temperature: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }, this), \", Humidity:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \", Wind: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [windSpeed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"C6HhSbnkxNBaWQWvZqV/UY5LGR8=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","sunny","cloudy","drizzle","snow","mist","jsxDEV","_jsxDEV","weatherIcons","Clear","Clouds","Drizzle","Snow","Mist","iconStyle","width","height","objectFit","Weather","city","_s","temperature","setTemperature","description","setDescription","humidity","setHumidity","windSpeed","setWindSpeed","apiKey","apiUrl","get","then","response","data","main","temp","weather","wind","speed","catch","error","console","getWeatherIcon","weatherDescription","iconUrl","src","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["/Users/stephaniewhite/Desktop/weather-react/src/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sunny from \"../src/assets/clearskies.jpg\";\nimport cloudy from \"../src/assets/clouds.jpg\";\nimport drizzle from \"../src/assets/rain.jpg\";\nimport snow from \"../src/assets/snow.png\"\nimport mist from \"../src/assets/fog.jpg\";\n\nconst weatherIcons = {\n  Clear: sunny,\n  Clouds: cloudy,\n  Drizzle: drizzle,\n  Snow: snow,\n  Mist: mist\n};\n\nconst iconStyle = {\n  width: \"100px\",\n  height: \"100px\",\n  objectFit: \"cover\",\n};\n\nexport default function Weather({ city }) {\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        setTemperature(response.data.main.temp);\n        setDescription(response.data.weather[0].main);\n        setHumidity(response.data.main.humidity);\n        setWindSpeed(response.data.wind.speed);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching weather data:\", error);\n      });\n  }, [city]);\n\n  const getWeatherIcon = (weatherDescription) => {\n    const iconUrl = weatherIcons[weatherDescription];\n    if (iconUrl) {\n      return <img src={iconUrl} alt={weatherDescription} style={iconStyle} />;\n    } else {\n      return <span>❓</span>;\n    }\n  };\n\n  return (\n    <div className=\"weather-app-data\">\n      <h1 className=\"weather-app-city\">{city}</h1>\n      <p className=\"weather-app-details\">\n        <span className=\"weather-app-icon\">{getWeatherIcon(description)}</span>\n        <br />\n        Temperature: <strong>{temperature}°C</strong>, Humidity:{\" \"}\n        <strong>{humidity}%</strong>, Wind: <strong>{windSpeed} km/h</strong>\n      </p>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAER,KAAK;EACZS,MAAM,EAAER,MAAM;EACdS,OAAO,EAAER,OAAO;EAChBS,IAAI,EAAER,IAAI;EACVS,IAAI,EAAER;AACR,CAAC;AAED,MAAMS,SAAS,GAAG;EAChBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,OAAO;EACfC,SAAS,EAAE;AACb,CAAC;AAED,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAM+B,MAAM,GAAG,kCAAkC;IACjD,MAAMC,MAAM,GAAG,qDAAqDX,IAAI,UAAUU,MAAM,eAAe;IAEvG7B,KAAK,CACF+B,GAAG,CAACD,MAAM,CAAC,CACXE,IAAI,CAAEC,QAAQ,IAAK;MAClBX,cAAc,CAACW,QAAQ,CAACC,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;MACvCZ,cAAc,CAACS,QAAQ,CAACC,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC;MAC7CT,WAAW,CAACO,QAAQ,CAACC,IAAI,CAACC,IAAI,CAACV,QAAQ,CAAC;MACxCG,YAAY,CAACK,QAAQ,CAACC,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACtB,IAAI,CAAC,CAAC;EAEV,MAAMwB,cAAc,GAAIC,kBAAkB,IAAK;IAC7C,MAAMC,OAAO,GAAGrC,YAAY,CAACoC,kBAAkB,CAAC;IAChD,IAAIC,OAAO,EAAE;MACX,oBAAOtC,OAAA;QAAKuC,GAAG,EAAED,OAAQ;QAACE,GAAG,EAAEH,kBAAmB;QAACI,KAAK,EAAElC;MAAU;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzE,CAAC,MAAM;MACL,oBAAO7C,OAAA;QAAA8C,QAAA,EAAM;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACvB;EACF,CAAC;EAED,oBACE7C,OAAA;IAAK+C,SAAS,EAAC,kBAAkB;IAAAD,QAAA,gBAC/B9C,OAAA;MAAI+C,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAElC;IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5C7C,OAAA;MAAG+C,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBAChC9C,OAAA;QAAM+C,SAAS,EAAC,kBAAkB;QAAAD,QAAA,EAAEV,cAAc,CAACpB,WAAW;MAAC;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvE7C,OAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,iBACO,eAAA7C,OAAA;QAAA8C,QAAA,GAAShC,WAAW,EAAC,OAAE;MAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAW,EAAC,GAAG,eAC5D7C,OAAA;QAAA8C,QAAA,GAAS5B,QAAQ,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,YAAQ,eAAA7C,OAAA;QAAA8C,QAAA,GAAS1B,SAAS,EAAC,OAAK;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAChC,EAAA,CA3CuBF,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}