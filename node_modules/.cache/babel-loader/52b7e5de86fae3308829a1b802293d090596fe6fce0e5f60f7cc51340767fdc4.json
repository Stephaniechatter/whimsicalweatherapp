{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniewhite/Desktop/weather-react/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Audio } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather({\n  city\n}) {\n  _s();\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(response => {\n      handleResponse(response);\n    }).catch(error => {\n      console.error(\"Error fetching weather data:\", error);\n    });\n  }, [city]);\n  function handleResponse(response) {\n    alert(`The weather in ${response.data.name} is ${response.data.main.temp}°C`);\n  }\n  return /*#__PURE__*/_jsxDEV(Audio, {\n    height: \"80\",\n    width: \"80\",\n    radius: \"9\",\n    color: \"green\",\n    ariaLabel: \"loading\",\n    wrapperStyle: true,\n    wrapperClass: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_s(Weather, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Weather;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [\"This project was coded by Stephanie White and is open-sourced on\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/your-github-repo\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), \" \", \"and hosted on\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.netlify.com/\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Netlify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_c2 = Footer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Weather\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"names":["React","useEffect","axios","Audio","jsxDEV","_jsxDEV","Weather","city","_s","apiKey","apiUrl","get","then","response","handleResponse","catch","error","console","alert","data","name","main","temp","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","fileName","_jsxFileName","lineNumber","columnNumber","_c","Footer","children","href","target","rel","_c2","$RefreshReg$"],"sources":["/Users/stephaniewhite/Desktop/weather-react/src/Weather.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Audio } from 'react-loader-spinner';\n\nexport default function Weather({ city }) {\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        handleResponse(response);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching weather data:\", error);\n      });\n  }, [city]);\n\n  function handleResponse(response) {\n    alert(`The weather in ${response.data.name} is ${response.data.main.temp}°C`);\n  }\n\n  return <Audio\n  height=\"80\"\n  width=\"80\"\n  radius=\"9\"\n  color=\"green\"\n  ariaLabel=\"loading\"\n  wrapperStyle\n  wrapperClass\n/>;\n}\nfunction Footer() {\n    return (\n      <footer>\n        This project was coded by Stephanie White and is open-sourced on{\" \"}\n        <a href=\"https://github.com/your-github-repo\" target=\"_blank\" rel=\"noopener noreferrer\">\n          GitHub\n        </a>{\" \"}\n        and hosted on{\" \"}\n        <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Netlify\n        </a>\n        .\n      </footer>\n    );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxCP,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAG,kCAAkC;IACjD,MAAMC,MAAM,GAAG,qDAAqDH,IAAI,UAAUE,MAAM,eAAe;IAEvGP,KAAK,CACFS,GAAG,CAACD,MAAM,CAAC,CACXE,IAAI,CAAEC,QAAQ,IAAK;MAClBC,cAAc,CAACD,QAAQ,CAAC;IAC1B,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,SAASO,cAAcA,CAACD,QAAQ,EAAE;IAChCK,KAAK,CAAC,kBAAkBL,QAAQ,CAACM,IAAI,CAACC,IAAI,OAAOP,QAAQ,CAACM,IAAI,CAACE,IAAI,CAACC,IAAI,IAAI,CAAC;EAC/E;EAEA,oBAAOjB,OAAA,CAACF,KAAK;IACboB,MAAM,EAAC,IAAI;IACXC,KAAK,EAAC,IAAI;IACVC,MAAM,EAAC,GAAG;IACVC,KAAK,EAAC,OAAO;IACbC,SAAS,EAAC,SAAS;IACnBC,YAAY;IACZC,YAAY;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AACF;AAACzB,EAAA,CA5BuBF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA6B/B,SAAS6B,MAAMA,CAAA,EAAG;EACd,oBACE9B,OAAA;IAAA+B,QAAA,GAAQ,kEAC0D,EAAC,GAAG,eACpE/B,OAAA;MAAGgC,IAAI,EAAC,qCAAqC;MAACC,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,qBAAqB;MAAAH,QAAA,EAAC;IAExF;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAAC,GAAG,EAAC,eACI,EAAC,GAAG,eACjB5B,OAAA;MAAGgC,IAAI,EAAC,0BAA0B;MAACC,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,qBAAqB;MAAAH,QAAA,EAAC;IAE7E;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,KAEN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACO,GAAA,GAdML,MAAM;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}