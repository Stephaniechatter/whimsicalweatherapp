{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniewhite/Desktop/weather-react/src/Forecast.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast({\n  forecastData\n}) {\n  // Function to map weather description to icons\n  const getWeatherIcon = description => {\n    switch (description) {\n      case \"üå§Ô∏è Clear\":\n        return \"‚òÄÔ∏è\";\n      case \"‚õÖ Partly cloudy\":\n        return \"‚õÖ\";\n      case \"üå¶Ô∏è Light rain showers\":\n        return \"üå¶Ô∏è\";\n      case \"üåû Sunny\":\n        return \"üåû\";\n      default:\n        return \"üåç\";\n      // Default icon if no match\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"4-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-list\",\n      children: forecastData.map((dayForecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day\",\n          children: dayForecast.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: getWeatherIcon(dayForecast.description)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Temperature: \", dayForecast.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Humidity: \", dayForecast.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Wind Speed: \", dayForecast.windSpeed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Forecast","forecastData","getWeatherIcon","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dayForecast","index","day","temperature","humidity","windSpeed","_c","$RefreshReg$"],"sources":["/Users/stephaniewhite/Desktop/weather-react/src/Forecast.js"],"sourcesContent":["import React from \"react\";\n\nfunction Forecast({ forecastData }) {\n  // Function to map weather description to icons\n  const getWeatherIcon = (description) => {\n    switch (description) {\n      case \"üå§Ô∏è Clear\":\n        return \"‚òÄÔ∏è\";\n      case \"‚õÖ Partly cloudy\":\n        return \"‚õÖ\";\n      case \"üå¶Ô∏è Light rain showers\":\n        return \"üå¶Ô∏è\";\n      case \"üåû Sunny\":\n        return \"üåû\";\n      default:\n        return \"üåç\"; // Default icon if no match\n    }\n  };\n\n  return (\n    <div className=\"forecast-container\">\n      <h2>4-Day Forecast</h2>\n      <div className=\"forecast-list\">\n        {forecastData.map((dayForecast, index) => (\n          <div className=\"forecast-item\" key={index}>\n            <div className=\"day\">{dayForecast.day}</div>\n            <div>{getWeatherIcon(dayForecast.description)}</div>\n            <div>Temperature: {dayForecast.temperature}¬∞C</div>\n            <div>Humidity: {dayForecast.humidity}%</div>\n            <div>Wind Speed: {dayForecast.windSpeed} km/h</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Forecast;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAClC;EACA,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtC,QAAQA,WAAW;MACjB,KAAK,WAAW;QACd,OAAO,IAAI;MACb,KAAK,iBAAiB;QACpB,OAAO,GAAG;MACZ,KAAK,wBAAwB;QAC3B,OAAO,KAAK;MACd,KAAK,UAAU;QACb,OAAO,IAAI;MACb;QACE,OAAO,IAAI;MAAE;IACjB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCN,OAAA;MAAAM,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBV,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BJ,YAAY,CAACS,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACnCb,OAAA;QAAKK,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BN,OAAA;UAAKK,SAAS,EAAC,KAAK;UAAAC,QAAA,EAAEM,WAAW,CAACE;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5CV,OAAA;UAAAM,QAAA,EAAMH,cAAc,CAACS,WAAW,CAACR,WAAW;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDV,OAAA;UAAAM,QAAA,GAAK,eAAa,EAACM,WAAW,CAACG,WAAW,EAAC,OAAE;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnDV,OAAA;UAAAM,QAAA,GAAK,YAAU,EAACM,WAAW,CAACI,QAAQ,EAAC,GAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5CV,OAAA;UAAAM,QAAA,GAAK,cAAY,EAACM,WAAW,CAACK,SAAS,EAAC,OAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GALjBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMpC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACQ,EAAA,GAjCQjB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}