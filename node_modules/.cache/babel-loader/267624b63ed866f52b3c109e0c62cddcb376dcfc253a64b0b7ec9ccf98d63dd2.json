{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniewhite/Desktop/weather-react/src/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather({\n  city\n}) {\n  _s();\n  const [loading, setLoading] = useState(true); // State to manage loading state\n  const [weatherData, setWeatherData] = useState(null); // State to store weather data\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(response => {\n      setWeatherData(response.data); // Store weather data\n      setLoading(false); // Turn off loading spinner\n    }).catch(error => {\n      setError(error); // Handle errors\n      setLoading(false); // Turn off loading spinner even if there's an error\n    });\n  }, [city]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-container\",\n      children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#ffffff\",\n        loading: loading,\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error fetching weather data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No weather data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", weatherData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", weatherData.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"Qwc6NdnMYXgk2Rtq144ZzbYqRRg=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","ClipLoader","jsxDEV","_jsxDEV","Weather","city","_s","loading","setLoading","weatherData","setWeatherData","error","setError","apiKey","apiUrl","get","then","response","data","catch","className","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","message","name","main","temp","weather","description","_c","$RefreshReg$"],"sources":["/Users/stephaniewhite/Desktop/weather-react/src/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport default function Weather({ city }) {\n  const [loading, setLoading] = useState(true); // State to manage loading state\n  const [weatherData, setWeatherData] = useState(null); // State to store weather data\n  const [error, setError] = useState(null); // State to handle errors\n\n  useEffect(() => {\n    const apiKey = \"ab8e7ef210556986d1c9a75d6007b825\";\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        setWeatherData(response.data); // Store weather data\n        setLoading(false); // Turn off loading spinner\n      })\n      .catch((error) => {\n        setError(error); // Handle errors\n        setLoading(false); // Turn off loading spinner even if there's an error\n      });\n  }, [city]);\n\n  if (loading) {\n    return (\n      <div className=\"spinner-container\">\n        <ClipLoader color={\"#ffffff\"} loading={loading} size={150} />\n        <p>Loading weather data...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p>Error fetching weather data: {error.message}</p>;\n  }\n\n  if (!weatherData) {\n    return <p>No weather data available.</p>;\n  }\n\n  return (\n    <div className=\"weather-container\">\n      <h2>Weather in {weatherData.name}</h2>\n      <p>Temperature: {weatherData.main.temp}Â°C</p>\n      <p>Description: {weatherData.weather[0].description}</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}