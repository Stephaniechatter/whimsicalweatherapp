{"ast":null,"code":"var _jsxFileName = \"/Users/stephaniewhite/Desktop/React/whimsicalweatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudSun, faCloud, faCloudRain } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport moment from 'moment-timezone'; // Import Moment-Timezone\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"cb286bad3607984b41ed10c8de5cf00e\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(\"New York\");\n  const [temperatureC, setTemperatureC] = useState(0);\n  const [temperatureF, setTemperatureF] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [humidity, setHumidity] = useState(0);\n  const [windSpeedKmh, setWindSpeedKmh] = useState(0);\n  const [windSpeedMph, setWindSpeedMph] = useState(0);\n  const [time, setTime] = useState(\"\");\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    fetchWeatherData();\n  }, [city]);\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = response.data;\n      setTemperatureC(data.main.temp);\n      setTemperatureF(convertCtoF(data.main.temp));\n      setDescription(data.weather[0].description);\n      setHumidity(data.main.humidity);\n      setWindSpeedKmh(data.wind.speed);\n      setWindSpeedMph(convertKmhtoMph(data.wind.speed));\n\n      // Get local time based on city's coordinates\n      const localTime = moment.utc().tz(getTimeZone(data.coord.lat, data.coord.lon)).format(\"HH:mm A\");\n      setTime(localTime);\n      setForecast([{\n        day: \"Mon\",\n        icon: faSun,\n        className: \"fa-sun\"\n      }, {\n        day: \"Tue\",\n        icon: faCloudSun,\n        className: \"fa-cloud-sun\"\n      }, {\n        day: \"Wed\",\n        icon: faCloud,\n        className: \"fa-cloud\"\n      }, {\n        day: \"Thu\",\n        icon: faCloudRain,\n        className: \"fa-cloud-rain\"\n      }]);\n    } catch (error) {\n      console.error('Error fetching weather data:', error.message);\n    }\n  };\n  const handleSearch = event => {\n    event.preventDefault();\n    const cityInput = event.target.elements.city.value;\n    setCity(cityInput);\n  };\n  const convertCtoF = celsius => {\n    return celsius * 9 / 5 + 32;\n  };\n  const convertKmhtoMph = kmh => {\n    return kmh / 1.60934;\n  };\n  const getTimeZone = (lat, lon) => {\n    // Use any preferred method to fetch time zone, e.g., Time ZoneDB API\n    // Replace with your API call method or library\n    return 'America/New_York'; // Example: Hardcoded for demonstration\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"search-form\",\n        id: \"search-form\",\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"city\",\n          placeholder: \"Enter a city...\",\n          required: true,\n          id: \"search-form-input\",\n          className: \"search-form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-form-button\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-app-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"default-city-name\",\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"weather-app-image\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: description === \"Clear\" ? faSun : description === \"Clouds\" ? faCloud : faCloudRain,\n            size: \"2x\",\n            className: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"weather-app-details\",\n          children: [\"Temperature: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [temperatureC, \"\\xB0C | \", temperatureF.toFixed(2), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 26\n          }, this), \", Humidity:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [humidity, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), \", Wind: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [windSpeedKmh.toFixed(2), \" km/h | \", windSpeedMph.toFixed(2), \" mph\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }, this), \", Time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"4-Day Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-list\",\n          children: forecast.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-item\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: item.icon,\n              size: \"2x\",\n              className: item.className\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jU8wNw/N8qjJpKaogDt+xIDKN+Q=\");\n_c = App;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [\"This project was coded by \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/stephaniechatter\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Stephanie White\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }, this), \" \", \" and is\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/stephaniechatter/whimsicalweatherapp\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"open-sourced on GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), \" and hosted on\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://luminous-babka-e88392.netlify.app/\",\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: \"Netlify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Footer;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Footer\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faSun","faCloudSun","faCloud","faCloudRain","axios","moment","jsxDEV","_jsxDEV","API_KEY","BASE_URL","App","_s","city","setCity","temperatureC","setTemperatureC","temperatureF","setTemperatureF","description","setDescription","humidity","setHumidity","windSpeedKmh","setWindSpeedKmh","windSpeedMph","setWindSpeedMph","time","setTime","forecast","setForecast","fetchWeatherData","response","get","data","main","temp","convertCtoF","weather","wind","speed","convertKmhtoMph","localTime","utc","tz","getTimeZone","coord","lat","lon","format","day","icon","className","error","console","message","handleSearch","event","preventDefault","cityInput","target","elements","value","celsius","kmh","children","id","onSubmit","type","name","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","size","toFixed","map","item","index","Footer","_c","href","rel","_c2","$RefreshReg$"],"sources":["/Users/stephaniewhite/Desktop/React/whimsicalweatherapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudSun, faCloud, faCloudRain } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport moment from 'moment-timezone'; // Import Moment-Timezone\nimport \"./App.css\";\n\nconst API_KEY = \"cb286bad3607984b41ed10c8de5cf00e\"; \nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/weather\";\n\nfunction App() {\n  const [city, setCity] = useState(\"New York\");\n  const [temperatureC, setTemperatureC] = useState(0);\n  const [temperatureF, setTemperatureF] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [humidity, setHumidity] = useState(0);\n  const [windSpeedKmh, setWindSpeedKmh] = useState(0);\n  const [windSpeedMph, setWindSpeedMph] = useState(0);\n  const [time, setTime] = useState(\"\");\n  const [forecast, setForecast] = useState([]);\n\n  useEffect(() => {\n    fetchWeatherData();\n  }, [city]);\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = response.data;\n\n      setTemperatureC(data.main.temp);\n      setTemperatureF(convertCtoF(data.main.temp));\n      setDescription(data.weather[0].description);\n      setHumidity(data.main.humidity);\n      setWindSpeedKmh(data.wind.speed);\n      setWindSpeedMph(convertKmhtoMph(data.wind.speed));\n\n      // Get local time based on city's coordinates\n      const localTime = moment.utc().tz(getTimeZone(data.coord.lat, data.coord.lon)).format(\"HH:mm A\");\n      setTime(localTime);\n\n      setForecast([\n        { day: \"Mon\", icon: faSun, className: \"fa-sun\" },\n        { day: \"Tue\", icon: faCloudSun, className: \"fa-cloud-sun\" },\n        { day: \"Wed\", icon: faCloud, className: \"fa-cloud\" },\n        { day: \"Thu\", icon: faCloudRain, className: \"fa-cloud-rain\" },\n      ]);\n    } catch (error) {\n      console.error('Error fetching weather data:', error.message);\n    }\n  };\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    const cityInput = event.target.elements.city.value;\n    setCity(cityInput);\n  };\n\n  const convertCtoF = (celsius) => {\n    return (celsius * 9/5) + 32;\n  };\n\n  const convertKmhtoMph = (kmh) => {\n    return kmh / 1.60934;\n  };\n\n  const getTimeZone = (lat, lon) => {\n    // Use any preferred method to fetch time zone, e.g., Time ZoneDB API\n    // Replace with your API call method or library\n    return 'America/New_York'; // Example: Hardcoded for demonstration\n  };\n\n  return (\n    <div className=\"weather-app\">\n      <header>\n        <form className=\"search-form\" id=\"search-form\" onSubmit={handleSearch}>\n          <input\n            type=\"search\"\n            name=\"city\"\n            placeholder=\"Enter a city...\"\n            required\n            id=\"search-form-input\"\n            className=\"search-form-input\"\n          />\n          <button type=\"submit\" className=\"search-form-button\">Search</button>\n        </form>\n      </header>\n      <main>\n        <div className=\"weather-app-data\">\n          <h1 className=\"default-city-name\">{city}</h1>\n          <p className=\"weather-app-image\">\n            <FontAwesomeIcon icon={description === \"Clear\" ? faSun : description === \"Clouds\" ? faCloud : faCloudRain} size=\"2x\" className=\"weather-icon\" />\n          </p>\n          <p className=\"weather-app-details\">\n            Temperature: <strong>{temperatureC}°C | {temperatureF.toFixed(2)}°F</strong>, Humidity:{\" \"}\n            <strong>{humidity}%</strong>, Wind: <strong>{windSpeedKmh.toFixed(2)} km/h | {windSpeedMph.toFixed(2)} mph</strong>,\n            Time: <strong>{time}</strong>\n          </p>\n        </div>\n        <div className=\"forecast-container\">\n          <h2>4-Day Forecast</h2>\n          <div className=\"forecast-list\">\n            {forecast.map((item, index) => (\n              <div key={index} className=\"forecast-item\">\n                <FontAwesomeIcon icon={item.icon} size=\"2x\" className={item.className} />\n                <p>{item.day}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      This project was coded by <a\n        href=\"https://github.com/stephaniechatter\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >Stephanie White</a>{\" \"} and is{\" \"}\n      <a\n        href=\"https://github.com/stephaniechatter/whimsicalweatherapp\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >open-sourced on GitHub</a> and hosted on{\" \"}\n      <a\n        href=\"https://luminous-babka-e88392.netlify.app/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >Netlify</a>.\n    </footer>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}